1.
a.Factory Method se bazează pe moștenire.Moștenirea implică folosirea de subclase.Subclasele rafinează comportamentul claselor pe care le extind.
Prototype se bazează pe compoziție.Compoziția implică ,ca clasa să folosească un obiect (parte) pentru a realiza anumite funcționalitâți.Obiectele care se folosesc sunt de tipul interfeței/clasei abstracte
b. În cazul FM,nu putem schimba obiectul pe care-l creăm decât prin distrugerea obiectului care creează.În cazul Protoype-ului ,toate subclasele sale trebuie să implementeze operația de clonare,lucru care poate fi dificil atunci când obiectele interne ale obiectelor pe care vrem să le creăm prezintă referințe ciclice ,sau nu suportă această clonare.
c.Este preferatâ compoziția în locul moștenirii,deoarece compoziția este dinamică(putem schimba obiectele care creeaza la run-time),și se pastrează încapsularea(obiectele sunt accesat doar prin intermediul interfțelor)
3.
a.Afirmația este falsă.Tiparele de proiectare nu conduc direct la o reutilizare de cod,ci mai degrabă de arhitectură/design,necesitând a fi modificate pentru a se potrivi cu problema pe care vrem să o rezolvăm în aplicația noastră.
4.
a.Rigiditatea se referă la faptul că o schimbare cât de mică atrage cu sine schimbare mai mare,pe când continuitatea ne spune amplitudinea schimbării să fie proporțională cu impactul ei.Imobilitatea se referă la faptul că e greu să reutilizezi codul scris,pe când continuitatea spune că componentele sunt formate din componente mai mici,iar cele mai mici pot fi folosite pentru a crea multe alte componente.Fragilitatea se referă la faptul că modifici într-un loc și crapă într-un loc,care nu are nicio(nu ar trebui să aibă) legătura cu cel inițial,iar protection spune că schimbările nu are trebui să se propage între componentele care n-au legătură.
b.Se încalcă regula Explicit Interfaces,care spune că dacă doua componente A și B comunică,acest lucru ar trebui să fie vizibil fie din textul lui A,fie din textul lui B,fie din textul ambelor,iar cand folosim varibile globale,dacă valoare lor se modifică într-o compoentă,celelalte compontente nu sțiu care din ele a produs modificarea.
c.Se încalcă criteriul Continuității,care spune că amplitudinea schimbării ar trebui să fie proporțională cu impactul ei,iar în cazul valoriilor ne-simbolice,când dorim să le schimbăm valoarea,trebuie să mergem în toate locurile unde sunt folosite pentru a verifica dacă noua valoarea afecteză cumva logica funționalității respective.